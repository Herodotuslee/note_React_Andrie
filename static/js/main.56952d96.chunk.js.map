{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list-v2/card-list-v2.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","CardlistV2","monsters","map","SearchBox","placeholder","handleChange","console","log","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLocaleLowerCase","includes","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAAe,I,kBCIFA,G,MAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,YCHdC,G,MAAY,SAAAP,GACzB,OAAO,qBAAKC,UAAU,YAAf,SAA4BD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OAAE,cAAC,EAAD,CAAMA,QAASA,WCHjEM,EAAU,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,aAIrC,OAHIC,QAAQC,IAAI,cAAcH,GAC1BE,QAAQC,IAAI,eAAeF,GAExB,uBAAOX,UAAU,SAASc,KAAK,SAASJ,YAAcA,EAAaK,SAAUJ,KC+DrEK,E,kDA9Db,aAAe,IAAD,8BACZ,gBAuBFL,aAAa,SAACM,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAvBpC,EAAKC,MAAQ,CACXjB,KAAM,SACNE,SAAU,CACR,CAAEF,KAAM,IAAKD,GAAI,QACjB,CAAEC,KAAM,IAAKD,GAAI,QACjB,CAAEC,KAAM,IAAKD,GAAI,SAEnBe,YAAY,IATF,E,qDAad,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEX,SAAUoB,S,oBAW7C,WAAU,IAAD,SACsBC,KAAKN,MAA3Bf,EADA,EACAA,SAASY,EADT,EACSA,YAGVU,EAAiBtB,EAASuB,QAAO,SAAA3B,GAAO,OAAEA,EAAQE,KAAK0B,oBAAoBC,SAASb,EAAYY,wBACtG,OAAQ,sBAAK/B,UAAU,MAAf,UAMT,cAAC,EAAD,CAAWU,YAAY,iBAAiBC,aAAciB,KAAKjB,eAStD,cAAC,EAAD,CAAYJ,SAAUsB,IACtB,8BAAID,KAAKN,MAAMjB,KAAf,OACA,wBAAQ4B,QAAS,kBAAM,EAAKf,SAAS,CAAEb,KAAM,SAA7C,gC,GAlDU6B,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.56952d96.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './card.styles.css';\n\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\n        <h1>{props.monster.name}</h1>\n    </div>\n)\n\n// https://robohash.org/1?set=set2","import React from 'react';\nimport { Card } from '../card/card.component';\nimport './card-list.styles.css';\n\nexport const CardlistV2 =props=>{\nreturn <div className='card-list'>{props.monsters.map(monster=><Card monster={monster}/>)}</div>\n}","import React from 'react';\n\nexport const SearchBox=({placeholder,handleChange})=>{\n    console.log('placeholder',placeholder)\n    console.log('handleChange',handleChange)\n\nreturn <input className='search' type='search' placeholder={ placeholder} onChange={handleChange}></input>\n}","import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react'\nimport { Cardlist } from './components/card-list/card-list.component'\nimport { CardlistV2 } from './components/card-list-v2/card-list-v2.component'\nimport { SearchBox} from './components/search-box/search-box.component'\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: 'Albert',\n      monsters: [\n        { name: 'A', id: '1111' },\n        { name: 'B', id: '2222' },\n        { name: 'C', id: '3333' }\n      ],\n      searchField:''\n    }\n    // this.handleChange=this.handleChange.bind(this)\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n\n  }\n\n  // handleChange(e){\n  //   this.setState({searchField:e.target.value})\n  // }\n  // need to use this to bind it\n  handleChange=(e)=>{\n    this.setState({searchField:e.target.value})\n  }\n  render() {\n    const {monsters,searchField}=this.state\n    // equivalent to\n    // const monsters=this.state.monsters\n    const filteredMonsters=monsters.filter(monster=>monster.name.toLocaleLowerCase().includes(searchField.toLocaleLowerCase()))\n    return (<div className=\"App\">\n      {/* <input type='search' placeholder='search monster' onChange={e=>{this.setState({searchField:e.target.value},()=>  console.log('async after call back',this.state.searchField)  )\n    console.log('wont display the result right away',this.state.searchField)  }}></input> */}\n    {/* onChange is an event and jsx */}\n   {/* <input type='search' placeholder='search monster' onChange={e=>this.setState({searchField:e.target.value})}></input> */}\n   {/* <SearchBox placeholder='search monster' handleChange={e=>this.setState({searchField:e.target.value})}/> */}\n   <SearchBox placeholder='search monster' handleChange={this.handleChange}/>\n\n        {/* (1) */}\n        {/* <Cardlist>Chilren</Cardlist> */}\n        {/* (2) */}\n        {/* <Cardlist>{this.state.monsters.map(monster=>\n  (<h1 key={monster.id}>{monster.name}</h1>)\n  )}</Cardlist> */}\n        {/* (3) */}\n        <CardlistV2 monsters={filteredMonsters}></CardlistV2>\n        <p>{this.state.name} </p>\n        <button onClick={() => this.setState({ name: 'Lee' })}>Change Text</button>\n        {/* when click it, change the state, rerender the page */}\n        {/* onClick is JSX, HTLM is onclick but not onClick */}\n        {/* between curly brace, render any js */}\n        {/* {this.state.monsters.map(monster=>\n  (<h1 key={monster.id}>{monster.name}</h1>)\n  )} */}\n    </div>\n    )\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}